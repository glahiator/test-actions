name: BUILD
on:
   # События, которые запускают jobs
    push:
      branches: [ "master" ]
    pull_request:
      branches: [ "master" ]

# jobs запускаются параллельно, если не указана последовательность
jobs:
    # Название job вы можете назвать как угодно
    my_build_job:
      # Операционная система в виртуальной машине, в которой запускаются процессы
      runs-on: ubuntu-latest
        # Шаги
      steps:
        # Actions от github: проверяет репозиторий, гит и т.д.
        - uses: actions/checkout@v3
        - uses: actions/setup-python@v4
          with:
            python-version: '3.10'
        - name: Cache pip
          uses: actions/cache@v3
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
              ${{ runner.os }}-
              
        - name: Install dependencies
          run: |
             python -m pip install --upgrade pip
             pip install flake8 pytest
             if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Run Tests
          run: python tests.py

        - name: Lint with flake8
          run: |
             # stop the build if there are Python syntax errors or undefined names
             flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
             # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide --exit-zero 
             flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

#         - name: Test with pytest and coverage
#           run: |
#              coverage run

#         - name: Create coverage report
#           run: |
#              coverage report

#         - name: Create HTML report
#           run: |
#              coverage html --directory=coverage_html_report/report-${{ matrix.os }}-${{ matrix.python-version }}

#         - name: Upload coverage results
#           uses: actions/upload-artifact@v2
#           with:
#              name: coverage-report-${{ matrix.os }}-${{ matrix.python-version }}
#              path: coverage_html_report/report-${{ matrix.os }}-${{ matrix.python-version }}
#            # Use always() to always run this step to publish test results when there are test failures
#           if: ${{ always() }}

